services:
  dennys:
    build: 
      context: .
      dockerfile: docker/Dockerfile
      target: app
    image: dennys:local
    container_name: dennys-container
    ports:
      - "127.0.0.1:9292:9292"
    env_file: .env
    environment:
      - LBLCS_JDBC_URL=${LBLCS_JDBC_URL}
      - LBLCS_JDBC_PW=${LBLCS_JDBC_PW}
      - RIOT_API_TOKEN=${RIOT_API_TOKEN}
      - RIOT_USE_STUBS=${RIOT_USE_STUBS}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    container_name: dennys-db
    ports:
      - "127.0.0.1:5432:5432"
    user: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    volumes:
      # DB Init Scripts
      - ./docker/postgres/sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "postgres"]
      interval: 5s 
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4:9.4
    container_name: pgadmin
    ports: 
      - "127.0.0.1:8888:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@dev.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD=False
      - PGADMIN_DISABLE_POSTFIX=true
    depends_on:
      db:
        condition: service_healthy
    volumes:
      # Add default database configuration
      - ./docker/pgAdmin/servers.json:/pgadmin4/servers.json

  swagger-editor:
    container_name: swagger
    image: swaggerapi/swagger-editor
    ports: 
      - "127.0.0.1:80:8080"
    volumes:
      - ./docker/swaggerEditor/openapi.yaml:/spec/openapi.yaml
    environment:
      SWAGGER_FILE: /spec/openapi.yaml


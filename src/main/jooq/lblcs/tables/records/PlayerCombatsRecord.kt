/*
 * This file is generated by jOOQ.
 */
package lblcs.tables.records


import lblcs.tables.PlayerCombats

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PlayerCombatsRecord() : UpdatableRecordImpl<PlayerCombatsRecord>(PlayerCombats.PLAYER_COMBATS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var kills: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var deaths: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var assists: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var damageToChamps: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var healingOnAllies: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var damageTakenFromChamps: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    open var teamKills: Int?
        set(value): Unit = set(7, value)
        get(): Int? = get(7) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised PlayerCombatsRecord
     */
    constructor(id: Int? = null, kills: Int? = null, deaths: Int? = null, assists: Int? = null, damageToChamps: Int? = null, healingOnAllies: Int? = null, damageTakenFromChamps: Int? = null, teamKills: Int? = null): this() {
        this.id = id
        this.kills = kills
        this.deaths = deaths
        this.assists = assists
        this.damageToChamps = damageToChamps
        this.healingOnAllies = healingOnAllies
        this.damageTakenFromChamps = damageTakenFromChamps
        this.teamKills = teamKills
        resetChangedOnNotNull()
    }
}

/*
 * This file is generated by jOOQ.
 */
package lblcs.tables.records


import java.time.OffsetDateTime

import lblcs.tables.RiotAccountsAuditLogs

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class RiotAccountsAuditLogsRecord() : UpdatableRecordImpl<RiotAccountsAuditLogsRecord>(RiotAccountsAuditLogs.RIOT_ACCOUNTS_AUDIT_LOGS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(1, value)
        get(): OffsetDateTime? = get(1) as OffsetDateTime?

    open var riotAccountId: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var action: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var message: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var origin: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised RiotAccountsAuditLogsRecord
     */
    constructor(id: Int? = null, createdAt: OffsetDateTime? = null, riotAccountId: Int? = null, action: String? = null, message: String? = null, origin: String? = null): this() {
        this.id = id
        this.createdAt = createdAt
        this.riotAccountId = riotAccountId
        this.action = action
        this.message = message
        this.origin = origin
        resetChangedOnNotNull()
    }
}

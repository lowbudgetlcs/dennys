/*
 * This file is generated by jOOQ.
 */
package org.jooq.storage.tables.records


import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.storage.tables.PlayerChampSelects


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PlayerChampSelectsRecord() : UpdatableRecordImpl<PlayerChampSelectsRecord>(PlayerChampSelects.PLAYER_CHAMP_SELECTS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var championName: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var championId: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var summoner1Id: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var summoner2Id: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    open var keystoneRuneId: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var primaryRune1Id: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    open var primaryRune2Id: Int?
        set(value): Unit = set(7, value)
        get(): Int? = get(7) as Int?

    open var primaryRune3Id: Int?
        set(value): Unit = set(8, value)
        get(): Int? = get(8) as Int?

    open var secondaryRune1Id: Int?
        set(value): Unit = set(9, value)
        get(): Int? = get(9) as Int?

    open var secondaryRune2Id: Int?
        set(value): Unit = set(10, value)
        get(): Int? = get(10) as Int?

    open var statshard1Id: Int?
        set(value): Unit = set(11, value)
        get(): Int? = get(11) as Int?

    open var statshard2Id: Int?
        set(value): Unit = set(12, value)
        get(): Int? = get(12) as Int?

    open var statshard3Id: Int?
        set(value): Unit = set(13, value)
        get(): Int? = get(13) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised PlayerChampSelectsRecord
     */
    constructor(id: Int? = null, championName: String? = null, championId: Int? = null, summoner1Id: Int? = null, summoner2Id: Int? = null, keystoneRuneId: Int? = null, primaryRune1Id: Int? = null, primaryRune2Id: Int? = null, primaryRune3Id: Int? = null, secondaryRune1Id: Int? = null, secondaryRune2Id: Int? = null, statshard1Id: Int? = null, statshard2Id: Int? = null, statshard3Id: Int? = null): this() {
        this.id = id
        this.championName = championName
        this.championId = championId
        this.summoner1Id = summoner1Id
        this.summoner2Id = summoner2Id
        this.keystoneRuneId = keystoneRuneId
        this.primaryRune1Id = primaryRune1Id
        this.primaryRune2Id = primaryRune2Id
        this.primaryRune3Id = primaryRune3Id
        this.secondaryRune1Id = secondaryRune1Id
        this.secondaryRune2Id = secondaryRune2Id
        this.statshard1Id = statshard1Id
        this.statshard2Id = statshard2Id
        this.statshard3Id = statshard3Id
        resetChangedOnNotNull()
    }
}

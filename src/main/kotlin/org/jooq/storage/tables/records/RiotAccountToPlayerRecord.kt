/*
 * This file is generated by jOOQ.
 */
package org.jooq.storage.tables.records


import org.jooq.Record2
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.storage.tables.RiotAccountToPlayer


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class RiotAccountToPlayerRecord() : UpdatableRecordImpl<RiotAccountToPlayerRecord>(RiotAccountToPlayer.RIOT_ACCOUNT_TO_PLAYER) {

    open var playerId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var riotAccountId: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<Int?, Int?> = super.key() as Record2<Int?, Int?>

    /**
     * Create a detached, initialised RiotAccountToPlayerRecord
     */
    constructor(playerId: Int? = null, riotAccountId: Int? = null): this() {
        this.playerId = playerId
        this.riotAccountId = riotAccountId
        resetChangedOnNotNull()
    }
}

/*
 * This file is generated by jOOQ.
 */
package org.jooq.storage.tables.records


import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.storage.tables.Games


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GamesRecord() : UpdatableRecordImpl<GamesRecord>(Games.GAMES) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var shortcode: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var blueTeam: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var redTeam: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var seriesId: Int?
        set(value): Unit = set(4, value)
        get(): Int? = get(4) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised GamesRecord
     */
    constructor(id: Int? = null, shortcode: String? = null, blueTeam: Int? = null, redTeam: Int? = null, seriesId: Int? = null): this() {
        this.id = id
        this.shortcode = shortcode
        this.blueTeam = blueTeam
        this.redTeam = redTeam
        this.seriesId = seriesId
        resetChangedOnNotNull()
    }
}

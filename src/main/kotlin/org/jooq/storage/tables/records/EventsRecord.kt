/*
 * This file is generated by jOOQ.
 */
package org.jooq.storage.tables.records


import java.time.Instant

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.storage.tables.Events


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class EventsRecord() : UpdatableRecordImpl<EventsRecord>(Events.EVENTS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var description: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var riotTournamentId: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var createdAt: Instant?
        set(value): Unit = set(4, value)
        get(): Instant? = get(4) as Instant?

    open var startDate: Instant?
        set(value): Unit = set(5, value)
        get(): Instant? = get(5) as Instant?

    open var endDate: Instant?
        set(value): Unit = set(6, value)
        get(): Instant? = get(6) as Instant?

    open var status: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised EventsRecord
     */
    constructor(id: Int? = null, name: String? = null, description: String? = null, riotTournamentId: Int? = null, createdAt: Instant? = null, startDate: Instant? = null, endDate: Instant? = null, status: String? = null): this() {
        this.id = id
        this.name = name
        this.description = description
        this.riotTournamentId = riotTournamentId
        this.createdAt = createdAt
        this.startDate = startDate
        this.endDate = endDate
        this.status = status
        resetChangedOnNotNull()
    }
}

/*
 * This file is generated by jOOQ.
 */
package org.jooq.storage.tables.records


import java.time.Instant

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import org.jooq.storage.tables.Users


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UsersRecord() : UpdatableRecordImpl<UsersRecord>(Users.USERS) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var username: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var password: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var salt: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var createdAt: Instant?
        set(value): Unit = set(4, value)
        get(): Instant? = get(4) as Instant?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(id: Int? = null, username: String? = null, password: String? = null, salt: String? = null, createdAt: Instant? = null): this() {
        this.id = id
        this.username = username
        this.password = password
        this.salt = salt
        this.createdAt = createdAt
        resetChangedOnNotNull()
    }
}

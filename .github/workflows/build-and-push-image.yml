name: Build application image, push to registry, deploy to production

on:
  push:
    paths-ignore:
      - 'docker/**'
      - 'gradle/**'
      - '.gitignore'
      - 'README.md'
      - 'LICENSE.txt'
      - 'shell.nix'
      - 'Makefile'
      - 'compose.yml'

    branches: 
      - main

jobs:
  
  build-push:
    runs-on: ubuntu-latest
    needs: env
    steps:
      - uses: actions/checkout@v4

      - name: Set app name and version
        shell: bash
        run: |
          VER=$(cat VERSION)
          echo "VERSION=$VER" > $GITHUB_ENV
                
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/arm64
          push: true
          tags: 
            - lblcs/dennys:latest
            - lblcs/dennys:${{ env.VERSION }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Execute docker compose on prod server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /lblcs/docker/dennys
            echo LBLCS_JDBC_URL="${{ secrets.LBLCS_JDBC_URL }}" > .env
            echo LBLCS_JDBC_PW="${{ secrets.LBLCS_JDBC_PW }}" >> .env
            echo RIOT_API_TOKEN="${{ secrets.RIOT_API_TOKEN }}" >> .env
            docker compose down
            docker compose pull
            docker compose up -d
            rm -f ./.env

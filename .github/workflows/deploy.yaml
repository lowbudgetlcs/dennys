name: Deploy to Prod

on:
  push:
    paths-ignore:
      - 'logs/'
      - '**/*.md'
      - '**/*.txt'
      - '**/*.nix'
    branches: [ "main" ]

jobs:
  
  env:
    uses: ./.github/workflows/build-env.yaml

  build:
    runs-on: macos-latest
    needs: env
    steps:
      - name: Download env artifact
        uses: actions/download-artifact@v4
        with:
          name: env

      - name: Import env
        shell: bash
        run: |
          while read env; do
            echo $env >> $GITHUB_ENV
          done <<< $(cat .env.art)

      - uses: actions/checkout@v4
      
      - run: |
          security -v unlock-keychain ~/Library/Keychains/login.keychain-db
          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: lblcs/${{ env.APP }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download env artifact
        uses: actions/download-artifact@v4
        with:
          name: env

      - name: Import env
        shell: bash
        run: |
          while read env; do
            echo $env >> $GITHUB_ENV
          done <<< $( cat .env.art)

      - name: Execute docker compose on prod server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /lblcs/docker/${{ env.APP }}
            echo LBLCS_JDBC_URL="${{ secrets.LBLCS_JDBC_URL }}" > .env
            echo LBLCS_JDBC_PW="${{ secrets.LBLCS_JDBC_PW }}" >> .env
            echo RIOT_API_TOKEN="${{ secrets.RIOT_API_TOKEN }}" >> .env
            docker compose down
            docker compose pull
            docker compose up -d
            rm -f ./.env
